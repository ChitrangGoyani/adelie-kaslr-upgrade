diff -Narup -W 500 a/arch/x86/Kconfig b/arch/x86/Kconfig
--- a/arch/x86/Kconfig	2024-04-03 17:29:02.536701406 -0400
+++ b/arch/x86/Kconfig	2024-04-04 18:10:23.339317498 -0400
@@ -2270,6 +2270,15 @@ config ADDRESS_MASKING
 	  The capability can be used for efficient address sanitizers (ASAN)
 	  implementation and for optimizations in JITs.
 
+config X86_PIE
+	bool
+	depends on X86_64
+	select DEFAULT_HIDDEN_SYMS
+	select WEAK_PROVIDE_HIDDEN
+	select DYNAMIC_MODULE_BASE
+	select MODULE_REL_CRCS if MODVERSIONS
+
+
 config HOTPLUG_CPU
 	def_bool y
 	depends on SMP
diff -Narup -W 500 a/arch/x86/Makefile b/arch/x86/Makefile
--- a/arch/x86/Makefile	2024-04-04 18:13:09.769323398 -0400
+++ b/arch/x86/Makefile	2024-04-04 18:11:52.539320664 -0400
@@ -167,6 +167,21 @@ else
         KBUILD_CFLAGS += -mno-red-zone
 ifdef CONFIG_X86_PIE
         KBUILD_LDFLAGS_MODULE += -T $(srctree)/arch/x86/kernel/module.lds
+        KBUILD_CFLAGS += -fPIE
+
+        # Relax relocation in both CFLAGS and LDFLAGS to support older compilers
+        KBUILD_CFLAGS += $(call cc-option,-Wa$(comma)-mrelax-relocations=no)
+        LDFLAGS_vmlinux += $(call ld-option,--no-relax)
+        KBUILD_LDFLAGS_MODULE += $(call ld-option,--no-relax)
+
+        # Stack validation is not yet support due to self-referenced switches
+ifdef CONFIG_STACK_VALIDATION
+        $(warning CONFIG_STACK_VALIDATION is not yet supported for x86_64 pie \
+	        build.)
+        SKIP_STACK_VALIDATION := 1
+        export SKIP_STACK_VALIDATION
+endif
+
 else
         KBUILD_CFLAGS += -mcmodel=kernel
 endif
